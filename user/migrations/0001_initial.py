# Generated by Django 3.2.5 on 2021-11-03 12:29

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=64)),
                (
                    "email",
                    models.EmailField(db_index=True, max_length=254, unique=True),
                ),
                ("is_email_verified", models.BooleanField(default=False)),
                (
                    "username",
                    models.CharField(
                        blank=True, db_index=True, max_length=12, null=True, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=32, null=True)),
                ("last_name", models.CharField(blank=True, max_length=32, null=True)),
                (
                    "smallcase_auth_id",
                    models.CharField(blank=True, max_length=64, null=True, unique=True),
                ),
                ("broker_connected_at", models.DateTimeField(blank=True, null=True)),
                (
                    "signup_method",
                    models.CharField(
                        choices=[
                            ("Simple", "Simple"),
                            ("Google", "Google"),
                            ("Twitter", "Twitter"),
                        ],
                        default="Simple",
                        max_length=16,
                    ),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=16, null=True, unique=True),
                ),
                ("country_code", models.CharField(blank=True, max_length=4, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("karma", models.PositiveIntegerField(blank=True, default=0)),
                ("about", models.CharField(blank=True, max_length=512, null=True)),
                (
                    "profile_picture_url",
                    models.URLField(blank=True, max_length=128, null=True),
                ),
                (
                    "verified_professional_accounts",
                    models.JSONField(blank=True, null=True),
                ),
                ("profile_progress_score", models.PositiveIntegerField(default=0)),
                ("following_count", models.PositiveIntegerField(default=0)),
                ("followers_count", models.PositiveIntegerField(default=0)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "User",
                "swappable": "AUTH_USER_MODEL",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserHolding",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("holdings", models.JSONField(db_index=True)),
                ("last_update", models.DateTimeField()),
                ("broker_name", models.CharField(db_index=True, max_length=32)),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="userholding_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "UserHolding",
                "verbose_name_plural": "UserHoldings",
                "db_table": "UserHolding",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UserFriendship",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "friendship",
                    models.CharField(
                        choices=[
                            ("None", "No Friendship"),
                            ("Follow", "Follow"),
                            ("Blocked", "Blocked"),
                            ("Unblock", "Unblock"),
                        ],
                        default="None",
                        max_length=16,
                    ),
                ),
                (
                    "created_by_user",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="userfriendship_created_by",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="related_friendships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "relating_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="relating_friendships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "UserFriendship",
                "verbose_name_plural": "UserFriendships",
                "db_table": "User_Friendship",
                "unique_together": {("relating_user", "related_user")},
            },
        ),
        migrations.AddField(
            model_name="user",
            name="user_friendships",
            field=models.ManyToManyField(
                related_name="user_relations",
                through="user.UserFriendship",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
    ]
